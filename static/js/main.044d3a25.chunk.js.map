{"version":3,"sources":["Contexts/TodoContext.jsx","Hooks/useLocalStorage.jsx","Components/TodoCounter.jsx","Components/TodoSearch.jsx","Components/TodoList.jsx","Components/TodoItem.jsx","Components/CreateTodoButton.jsx","Components/Modal.jsx","Components/TodoForm.jsx","Components/AppUI.jsx","App.jsx","index.js"],"names":["Context","createContext","TodoProvider","props","itemName","initialValue","parsedItems","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","useState","item","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchTerm","setSearchTerm","openModal","setOpenModal","completedTodos","filter","todo","isCompleted","length","totalTodos","searchedTodos","text","toLocaleLowerCase","includes","Provider","value","toggleCompleteTodo","newTodos","todoIndex","findIndex","addTodo","push","deleteTodo","splice","todolistEmpty","total","searched","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","target","TodoList","TodoItem","trashIcon","icon","faTrash","checkIcon","faCheck","onClick","CreateTodoButton","prev","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","e","preventDefault","alert","type","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.044d3a25.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { useLocalStorage } from \"../Hooks/useLocalStorage\";\r\n\r\nconst Context = createContext();\r\n\r\nconst TodoProvider = (props) => {\r\n  const [todos, saveTodos] = useLocalStorage(\"todos_v1\", []);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  /* Handlers */\r\n\r\n  const completedTodos = todos.filter((todo) => todo.isCompleted).length;\r\n  let totalTodos = todos.length;\r\n  let searchedTodos = [];\r\n\r\n  if (!searchTerm.length > 2) {\r\n    searchedTodos = todos;\r\n  } else {\r\n    searchedTodos = todos.filter((todo) =>\r\n      todo.text.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n    );\r\n  }\r\n\r\n  const toggleCompleteTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    newTodos[todoIndex].isCompleted = !newTodos[todoIndex].isCompleted;\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    newTodos.push({ text, isCompleted: false });\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const todolistEmpty = (total, searched) => {\r\n    if (!total) {\r\n      return <p>Crea tu primer to do</p>;\r\n    } else {\r\n      if (!searched.length) {\r\n        return <p>No hay to dos que cumplan con la b√∫squeda</p>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        completedTodos,\r\n        totalTodos,\r\n        searchTerm,\r\n        setSearchTerm,\r\n        searchedTodos,\r\n        toggleCompleteTodo,\r\n        addTodo,\r\n        deleteTodo,\r\n        todolistEmpty,\r\n        openModal,\r\n        setOpenModal,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport { TodoProvider, Context };\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const localStorageItem = localStorage.getItem(itemName);\r\n\r\n  let parsedItems;\r\n  if (!localStorageItem) {\r\n    localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n    parsedItems = initialValue;\r\n  } else {\r\n    parsedItems = JSON.parse(localStorageItem);\r\n  }\r\n\r\n  const [item, setItem] = useState(parsedItems);\r\n\r\n  const saveItem = (newItem) => {\r\n    const stringifiedItem = JSON.stringify(newItem);\r\n    localStorage.setItem(itemName, stringifiedItem);\r\n    setItem(newItem);\r\n  };\r\n\r\n  return [item, saveItem];\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import { useContext } from \"react\";\r\n\r\nimport \"./styles/TodoCounter.css\";\r\n\r\n/* Context */\r\nimport { Context } from \"../Contexts/TodoContext\";\r\n\r\nconst TodoCounter = () => {\r\n  const { completedTodos, totalTodos } = useContext(Context);\r\n  return (\r\n    <h1 className=\"counter\">\r\n      Has completado {completedTodos} de {totalTodos} TO DO's\r\n    </h1>\r\n  );\r\n};\r\nexport { TodoCounter };\r\n","import { useContext } from \"react\";\r\n/* Context */\r\nimport { Context } from \"../Contexts/TodoContext\";\r\n/* Styles */\r\nimport \"./styles/TodoSearch.css\";\r\n\r\nconst TodoSearch = () => {\r\n  const { searchTerm, setSearchTerm } = useContext(Context);\r\n\r\n  const handleSearchTermChange = ({ target: { value } }) => {\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      placeholder=\"Busqueda\"\r\n      className=\"searchBar\"\r\n      value={searchTerm}\r\n      onChange={handleSearchTermChange}\r\n    ></input>\r\n  );\r\n};\r\nexport { TodoSearch };\r\n","import './styles/TodoList.css'\r\n\r\nconst TodoList = ({children}) => {\r\n  return (\r\n      <ul>\r\n          {children}\r\n      </ul>\r\n  );\r\n};\r\nexport { TodoList };\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./styles/TodoItem.css\";\r\n\r\nconst TodoItem = ({ text, isCompleted, toggleCompleteTodo, deleteTodo }) => {\r\n  const trashIcon = <FontAwesomeIcon icon={faTrash} />;\r\n  const checkIcon = <FontAwesomeIcon icon={faCheck} />;\r\n\r\n  /* \r\n  // const [textStyle] = useState(isCompleted ? \"text--Completed\" : null);\r\n  // const [checkStyle] = useState(\r\n  //   isCompleted ? \"icon icon-Check icon-Check--Completed\" : \"icon icon-Check\"\r\n  // ); */\r\n\r\n  return (\r\n    <li>\r\n      <span\r\n        className={`icon icon-Check ${isCompleted && \"icon-Check--Completed\"}`}\r\n        onClick={toggleCompleteTodo}\r\n      >\r\n        {checkIcon}\r\n      </span>\r\n      <p className={`text ${isCompleted && \"text--Completed\"}`}>{text}</p>\r\n      <span className=\"icon icon-Delete\" onClick={deleteTodo}>\r\n        {trashIcon}\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { TodoItem };\r\n","import \"./styles/CreateTodoButton.css\";\r\nconst CreateTodoButton = ({ setOpenModal }) => {\r\n  const handleClick = () => {\r\n    setOpenModal(prev => !prev);\r\n  };\r\n  return (\r\n    <button className=\"button\" onClick={handleClick}>\r\n      <span>Agregar To Do</span>\r\n    </button>\r\n  );\r\n};\r\nexport { CreateTodoButton };\r\n","import ReactDOM from \"react-dom\";\r\n\r\n/* Styles */\r\nimport \"./styles/Modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n      <div className=\"modal-overlay\"> \r\n      {children}\r\n      </div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\nexport { Modal };\r\n","import { useContext, useState } from \"react\";\r\nimport { Context } from \"../Contexts/TodoContext\";\r\n\r\nimport \"./styles/TodoForm.css\";\r\n\r\nconst TodoForm = () => {\r\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\r\n  const { addTodo, setOpenModal } = useContext(Context);\r\n\r\n  const handleValueChange = ({ target: { value } }) => {\r\n    setNewTodoValue(value);\r\n  };\r\n\r\n  const handleOnCancel = () => {\r\n    setOpenModal((prev) => !prev);\r\n  };\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!newTodoValue) {\r\n       alert(\"El campo esta vacio\"); \r\n       return;\r\n    }\r\n    addTodo(newTodoValue);\r\n    setOpenModal((prev) => !prev);\r\n  };\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <label>Escribe el TO DO</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={handleValueChange}\r\n        placeholder=\"Realizar la tarea de matematicas\"\r\n      ></textarea>\r\n      <div className=\"form-buttonContainer\">\r\n        <button\r\n          onClick={handleOnCancel}\r\n          type=\"button\"\r\n          className=\"button formButton formButton--cancel\"\r\n        >\r\n          <span>Cancelar</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"button formButton formButton--add\">\r\n          <span>A√±adir</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport { TodoForm };\r\n","import { useContext } from \"react\";\r\n/* Context */\r\nimport { Context } from \"../Contexts/TodoContext\";\r\n/* Components */\r\nimport { TodoCounter } from \"./TodoCounter\";\r\nimport { TodoSearch } from \"./TodoSearch\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { TodoItem } from \"./TodoItem\";\r\nimport { CreateTodoButton } from \"./CreateTodoButton\";\r\nimport { Modal } from \"./Modal\";\r\nimport {TodoForm} from './TodoForm'\r\n\r\nimport \"./styles/AppUI.css\";\r\n\r\nconst AppUI = () => {\r\n  const {\r\n    totalTodos,\r\n    searchedTodos,\r\n    deleteTodo,\r\n    toggleCompleteTodo,\r\n    todolistEmpty,\r\n    openModal,\r\n    setOpenModal,\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"TodoContainer\">\r\n      <TodoCounter />\r\n\r\n      <TodoSearch />\r\n\r\n      <TodoList>\r\n        {todolistEmpty(totalTodos, searchedTodos)}\r\n\r\n        {searchedTodos.map((item) => (\r\n          <TodoItem\r\n            key={item.text}\r\n            text={item.text}\r\n            isCompleted={item.isCompleted}\r\n            toggleCompleteTodo={() => toggleCompleteTodo(item.text)}\r\n            deleteTodo={() => deleteTodo(item.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n      {openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n      )}\r\n      <CreateTodoButton \r\n        setOpenModal={setOpenModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { AppUI };\r\n","/* Components */\nimport { TodoProvider } from \"./Contexts/TodoContext\";\nimport { AppUI } from \"./Components/AppUI\";\n\n/* Data */\n// /* const defaultTodos = [\n//   { text: \"Learn React\", isCompleted: false },\n//   { text: \"Make a react app\", isCompleted: false },\n//   { text: \"Chill\", isCompleted: false },\n//   { text: \"Jugar\", isCompleted: true },\n//   { text: \"Leer Mangas\", isCompleted: false },\n// ]; */\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}